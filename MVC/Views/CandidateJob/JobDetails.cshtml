@{
    ViewData["Title"] = "Job Search";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}
<style>
    :root {
        --primary-color: #2563eb;
        --primary-hover: #1d4ed8;
        --secondary-color: #6b7280;
        --light-bg: #f8fafc;
        --border-color: #e5e7eb;
        --skill-bg: #e0e7ff;
        --skill-text: #3730a3;
    }

    .job-details-container {
        max-width: 800px;
        margin: 40px auto;
        padding: 30px;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        border: 1px solid var(--border-color);
    }

    .job-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--border-color);
    }

    .job-header .title {
        font-size: 28px;
        font-weight: 700;
        color: #111827;
        margin-bottom: 8px;
    }

    .job-header .company {
        font-size: 18px;
        color: var(--secondary-color);
        margin-bottom: 12px;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .job-header .company-name {
        font-weight: 600;
        color: #374151;
    }

    .job-header .location {
        display: flex;
        align-items: center;
        gap: 5px;
        color: var(--secondary-color);
        font-size: 16px;
    }

    .job-header .logo {
        width: 80px;
        height: 80px;
        border-radius: 12px;
        overflow: hidden;
        border: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #fff;
    }

    .job-header .logo img {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    .job-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 25px;
        padding-bottom: 20px;
        border-bottom: 1px solid var(--border-color);
    }

    .meta-item {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .meta-icon {
        color: var(--primary-color);
        font-size: 18px;
    }

    .meta-text {
        font-size: 15px;
    }

    .meta-label {
        color: var(--secondary-color);
        font-weight: 500;
    }

    .meta-value {
        color: #111827;
        font-weight: 600;
    }

    .job-details {
        font-size: 16px;
        color: #374151;
        line-height: 1.7;
    }

    .section-title {
        font-size: 20px;
        font-weight: 700;
        color: #111827;
        margin: 25px 0 15px;
        position: relative;
        padding-bottom: 8px;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 50px;
        height: 3px;
        background-color: var(--primary-color);
        border-radius: 3px;
    }

    .job-details ul {
        margin: 0 0 20px;
        padding-left: 22px;
    }

    .job-details li {
        margin-bottom: 8px;
    }

    .skills-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        margin: 15px 0 25px;
    }

    .skill {
        background-color: var(--skill-bg);
        color: var(--skill-text);
        padding: 6px 14px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .skill:hover {
        background-color: #c7d2fe;
        transform: translateY(-2px);
    }

    .posted-time {
        font-size: 14px;
        color: var(--secondary-color);
        margin-top: 10px;
        font-style: italic;
    }

    .apply-btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        padding: 12px 28px;
        background-color: var(--primary-color);
        color: #fff;
        text-decoration: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 600;
        margin-top: 30px;
        transition: all 0.2s ease;
        border: none;
        cursor: pointer;
        gap: 8px;
    }

    .apply-btn:hover {
        background-color: var(--primary-hover);
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(37, 99, 235, 0.2);
    }

    .company-info-container {
        max-width: 800px;
        margin: 30px auto;
        padding: 30px;
        background-color: var(--light-bg);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        border: 1px solid var(--border-color);
    }

    .company-info-header {
        font-size: 22px;
        font-weight: 700;
        color: #111827;
        margin-bottom: 20px;
        padding-bottom: 12px;
        border-bottom: 1px solid var(--border-color);
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .info-item {
        display: flex;
        align-items: flex-start;
        gap: 12px;
    }

    .info-icon {
        color: var(--primary-color);
        font-size: 20px;
        margin-top: 2px;
    }

    .info-content h6 {
        font-size: 16px;
        font-weight: 600;
        color: #374151;
        margin: 0 0 4px;
    }

    .info-content p,
    .info-content a {
        font-size: 15px;
        color: var(--secondary-color);
        margin: 0;
        transition: color 0.2s ease;
    }

    .info-content a:hover {
        color: var(--primary-color);
        text-decoration: underline;
    }

    .about-company {
        margin-top: 25px;
    }

    .about-title {
        font-size: 18px;
        font-weight: 600;
        color: #111827;
        margin-bottom: 12px;
    }

    .company-description {
        font-size: 15px;
        color: #4b5563;
        line-height: 1.7;
    }

    @@media (max-width: 768px) {
        .job-header {
            flex-direction: column;
            gap: 20px;
        }

        .job-header .logo {
            align-self: flex-start;
        }

        .job-meta {
            gap: 15px;
        }

        .job-details-container,
        .company-info-container {
            padding: 20px;
            margin: 20px auto;
        }
    }

    .back-button {
        background-color: #2563eb;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 16px;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-bottom: 20px;
        display: inline-block;
    }

    .back-button:hover {
        background-color: #1d4ed8;
    }
</style>

<!-- Back Button -->
<button onclick="window.location.href='/UserDashboard'" class="back-button">Back to Dashboard</button>

<div class="job-details-container">
    <!-- Existing content -->
    <div id="jobDetails"></div>
</div>
<!-- Load jQuery first -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Then your custom script that uses $ -->
<script src="~/js/your-custom-script.js"></script>
<script>
    function getUserIdFromToken() {
        let token = localStorage.getItem("token");
        if (!token) return null; // No token found

        let payload = JSON.parse(atob(token.split('.')[1])); // Decode JWT payload
        return payload.uid; // Extract User ID
    }

    // Get User ID dynamically
    var userId = getUserIdFromToken();

    $(document).ready(function () {
        loadJobDetails();
    });
    function timeAgo(dateString) {
        const [datePart, timePart] = dateString.split(' ');
        const [day, month, year] = datePart.split('-');
        const [hours, minutes, seconds] = timePart.split(':');
        const posted = new Date(year, month - 1, day, hours, minutes, seconds);
        const now = new Date();
        const diffInMs = now - posted;
        const diffInMinutes = Math.floor(diffInMs / (1000 * 60));
        const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));
        const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));
        if (diffInMinutes < 60) {
            return `${diffInMinutes} minute${diffInMinutes === 1 ? '' : 's'} ago`;
        } else if (diffInHours < 24) {
            return `${diffInHours} hour${diffInHours === 1 ? '' : 's'} ago`;
        } else {
            return `${diffInDays} day${diffInDays === 1 ? '' : 's'} ago`;
        }
    }
    function formatDescription(description) {
        if (!description) return '<ul><li>No description available</li></ul>';
        // Split by period, trim whitespace, filter out empty strings
        const sentences = description.split('.')
            .map(sentence => sentence.trim())
            .filter(sentence => sentence.length > 0);
        // Map to list items and join
        const listItems = sentences.map(sentence => `<li>${sentence}</li>`).join('');
        return `<ul>${listItems}</ul>`;
    }

    function loadJobDetails() {
        const urlParams = new URLSearchParams(window.location.search);
        const jobId = urlParams.get('c_job_id');
        if (!jobId) {
            $("#jobDetails").html("<p>No job ID provided.</p>");
            return;
        }

        $.ajax({
            url: `http://localhost:5086/api/postedjob/getJobDescription?id=${jobId}`,
            dataType: "json",
            success: function (job) {
                console.log("Job Details:", job);
                const skillsArray = job.c_skills ? job.c_skills.split(',').map(skill => skill.trim()) : [];
                const descriptionHtml = formatDescription(job.c_job_desc);
                const html = `
                    <div class="job-header">
                        <div>
                            <h1 class="title">${job.c_job_title || "No Title"}</h1>
                            <div class="company">
                                <span class="company-name">${job.company?.c_company_name || "Unknown Company"}</span>
                                <span class="location">
                                    <i class="fas fa-map-marker-alt"></i>
                                    ${job.c_job_location || "N/A"}
                                </span>
                            </div>
                        </div>
                        <div class="logo">
                            <img src="${job.company?.c_company_logo || '/default-logo.png'}" alt="Company Logo" />
                        </div>
                    </div>

                    <div class="job-meta">
                        <div class="meta-item">
                            <i class="fas fa-briefcase meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Job Type</span>
                                <span class="meta-value">${job.c_job_type || "Not specified"}</span>
                            </div>
                        </div>

                        <div class="meta-item">
                            <i class="fas fa-clock meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Experience</span>
                                <span class="meta-value">${job.c_job_experience || "N/A"} Years</span>
                            </div>
                        </div>

                        <div class="meta-item">
                            <i class="fas fa-money-bill-wave meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Salary</span>
                                <span class="meta-value">₹ ${job.c_salary_range || "Not disclosed"}</span>
                            </div>
                        </div>

                        <div class="meta-item">
                            <i class="fas fa-users meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Vacancies</span>
                                <span class="meta-value">${job.c_vacancy || "N/A"}</span>
                            </div>
                        </div>
                    </div>

                    <div class="job-details">
                        <h3 class="section-title">Job Description</h3>
                        ${descriptionHtml}

                        <h3 class="section-title">Requirements</h3>
                        <div class="meta-item" style="margin-bottom: 15px;">
                            <i class="fas fa-graduation-cap meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Qualification</span>
                                <span class="meta-value">${job.c_qualification_title || "Not specified"}</span>
                            </div>
                        </div>

                        <div class="meta-item" style="margin-bottom: 15px;">
                            <i class="fas fa-building meta-icon"></i>
                            <div class="meta-text">
                                <span class="meta-label">Department</span>
                                <span class="meta-value">${job.department?.c_deptname || "Not specified"}</span>
                            </div>
                        </div>

                        <h3 class="section-title">Skills Required</h3>
                        <div class="skills-container">
                            ${skillsArray.length ? skillsArray.map(skill => `<div class="skill">${skill}</div>`).join('') : '<div class="skill">Not specified</div>'}
                        </div>

                        <p class="posted-time">Posted ${job.c_post_date ? timeAgo(job.c_post_date) : "N/A"}</p>

                        <button class="apply-btn">
                            <i class="fas fa-paper-plane"></i>
                            Apply Now
                        </button>
                    </div>

                    <div class="company-info-container">
                        <h3 class="company-info-header">About the Company</h3>

                        <div class="info-grid">
                            <div class="info-item">
                                <i class="fas fa-envelope info-icon"></i>
                                <div class="info-content">
                                    <h6>Email</h6>
                                    <a href="mailto:${job.company.c_company_email}">${job.company.c_company_email || "Not provided"}</a>
                                </div>
                            </div>

                            <div class="info-item">
                                <i class="fas fa-map-marker-alt info-icon"></i>
                                <div class="info-content">
                                    <h6>Location</h6>
                                    <p>${job.company.c_company_address || "Not provided"}</p>
                                </div>
                            </div>

                            <div class="info-item">
                                <i class="fas fa-globe info-icon"></i>
                                <div class="info-content">
                                    <h6>Website</h6>
                                    <a href="${job.company.c_company_website}" target="_blank">${job.company.c_company_website || "Not provided"}</a>
                                </div>
                            </div>
                        </div>

                        <div class="about-company">
                            <h6 class="about-title">Company Description</h6>
                            <p class="company-description">${job.company.c_company_description || "No company description available."}</p>
                        </div>
                    </div>
                `;
                $("#jobDetails").html(html);
                checkUserApplyStatus(job.c_job_id);
            },
            error: function (xhr, status, error) {
                console.error("Error fetching job details:", status, error);
                $("#jobDetails").html(`
                    <div class="error-message" style="text-align: center; padding: 40px;">
                        <i class="fas fa-exclamation-triangle" style="font-size: 48px; color: #ef4444; margin-bottom: 20px;"></i>
                        <h3 style="color: #111827; margin-bottom: 10px;">Failed to load job details</h3>
                        <p style="color: var(--secondary-color);">Please try again later or contact support if the problem persists.</p>
                        <button onclick="window.location.reload()" style="margin-top: 20px; padding: 10px 20px; background-color: var(--primary-color); color: white; border: none; border-radius: 6px; cursor: pointer;">
                            <i class="fas fa-sync-alt"></i> Refresh Page
                        </button>
                    </div>
                `);
            }
        });
    }

    function checkUserApplyStatus(jobId) {
        const userId = getUserIdFromToken();
        if (!userId) return;

        $.ajax({
            url: `http://localhost:5086/api/ApplyJob/UserAppliedStatus?userid=${userId}&jobid=${jobId}`,
            method: 'GET',
            success: function (res) {
                console.log("Applied Status Response:", res);
                if (res.data === 1) {
                    $(".apply-btn").prop("disabled", true).text("Already Applied");
                } else if (res.data === -1) {
                    $(".apply-btn").prop("disabled", false).text("Apply Now");
                } else {
                    $(".apply-btn").prop("disabled", true).text("Unable to Check Status");
                }
            },
            error: function (xhr) {
                console.error("Error getting applied status:", xhr.responseText);
            }
        });
    }



    $(document).on("click", ".apply-btn", function (e) {
        e.preventDefault();
        const urlParams = new URLSearchParams(window.location.search);
        const jobId = urlParams.get('c_job_id');


        if (!userId) {
            Swal.fire("Please login first", "You must be logged in to apply for a job.", "warning");
            return;
        }

        var formData = new FormData();
        formData.append("c_uid", userId);
        formData.append("c_job_id", jobId);


        $.ajax({
            url: "http://localhost:5086/api/ApplyJob/ApplyJob", // Your API endpoint
            method: "POST",
            contentType: false,
            processData: false,
            data: formData,
            success: function (res) {
                if (res) {
                    $.ajax({
                        url: `http://localhost:5086/api/ApplyJob/CheckFields/${userId}`,
                        method: 'GET',
                        contentType: false,
                        processData: false,
                        success: function (response) {
                            console.log(response);
                            let missingFields = [];
                            if (!response.data.hasEducation) missingFields.push("Education details");
                            if (!response.data.hasExperience) missingFields.push("Work experience");
                            if (!response.data.hasResume) missingFields.push("Resume");


                            if (missingFields.length > 0) {
                                Swal.fire({
                                    icon: 'warning',
                                    title: 'Incomplete Profile!',
                                    html: 'Please complete the following before applying:<br><b>' + missingFields.join(', ') + '</b>',
                                    confirmButtonText: 'OK'
                                });
                            }
                        },
                        error: function (xhr) {
                            alert(xhr.responseText);
                        }
                    });
                }
                if (res.data == 1) {
                    Swal.fire({
                        icon: "success",
                        title: "Application Successful",
                        text: "You have successfully applied for this job!",
                        confirmButtonText: "OK"
                    }).then(() => {
                        window.location.reload();
                    });
                }
                else if (res.data == 2) {
                    Swal.fire("Warning", "You have already applied for this job!", "warning");
                }
                else {
                    Swal.fire("Info", res.msg || "Unexpected response.", "info");
                }
            },
            error: function (xhr) {
                console.log("AJAX error: ", xhr);
                Swal.fire("Error", "Something went wrong. Please try again later.", "error");
            }
        });
    });

</script>